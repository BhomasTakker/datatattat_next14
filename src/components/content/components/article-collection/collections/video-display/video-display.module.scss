@use "../../article/mixins/" as article;
@use "../../../../../../scss/abstracts/units/" as *;
@use "../../../../../../scss/mixins/ui/" as ui;

.root {
	.containerHorizontalScroll {
		.videoPlayer {
			display: flex;
			justify-content: center;
			// can add width here
			padding-bottom: 1.5rem;
		}

		ul {
			display: flex;
			gap: $spacingMd;
			@include ui.scrollXNoScroller();
			@include article.articleCardTopDown($contentWidthMd, $contentWidthMd);
			@media screen and (min-width: $screenWidthSm) {
				@include article.articleCardTopDown($contentWidthXl, $contentWidthMd);
			}
			@media screen and (min-width: $screenWidthMd) {
				@include article.articleCardTopDown($contentWidthXl2, $contentWidthMd);
			}
			.article {
				cursor: pointer;
			}
		}
	}

	.containerVerticalScroll {
		.videoPlayer {
			display: flex;
			justify-content: center;
			// can add width here
			padding-bottom: 1.5rem;
		}

		.articles {
			display: flex;
			gap: $spacingMd;
			@include ui.scrollXNoScroller();
			@include article.articleCardTopDown($contentWidthMd, $contentWidthMd);
			@media screen and (min-width: $screenWidthSm) {
				@include article.articleCardTopDown($contentWidthXl, $contentWidthMd);
			}
			@media screen and (min-width: $screenWidthMd) {
				@include article.articleCardTopDown($contentWidthXl2, $contentWidthMd);
			}

			.article {
				cursor: pointer;
			}
		}

		@media screen and (min-width: $screenWidthXl) {
			display: grid;
			grid-template-columns: 2fr 1fr;
			gap: $spacingLg;

			.videoPlayer {
				padding-bottom: 0;
			}

			.articles {
				height: 0;
				min-height: 100%;

				display: flex;
				flex-direction: column;
				gap: $spacingXs;

				@include ui.scrollXNoScroller();

				@media screen and (min-width: $screenWidthXl) {
					.article {
						all: initial;
						* {
							all: unset;
						}
					}
					@include article.articleCardLeftRight(
						$contentWidthXl2,
						$contentWidthXs4
					);
					.article {
						cursor: pointer;
					}
				}
			}
		}
	}
}
