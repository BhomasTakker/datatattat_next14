@use "../../../../../../scss/mixins/text/" as textMixins;
@use "../../../../../../scss/abstracts/units" as *;
@use "../../../../../../scss/abstracts/colours" as *;
@use "../../../../../../scss/abstracts/font" as *;

// layout of these isn't likely to change across implementations
@mixin article() {
	display: flex;

	background-color: $background-light;
	color: $text;

	&:hover,
	&:focus {
		background-color: rgb(0, 0, 0, 0.1);
	}
}

@mixin image($maxWidth, $minWidth) {
	max-width: $maxWidth;
	min-width: $minWidth;
	width: 100%;
}

@mixin contentContainer($maxWidth, $minWidth) {
	// using containers like this might be unperformant
	container: content-container / inline-size;

	display: flex;
	flex-direction: column;
	justify-content: space-between;

	max-width: $maxWidth;
	min-width: $minWidth;
	width: 100%;
}

@mixin textContainer() {
	display: flex;
	flex-direction: column;
	height: 100%;
	margin: $spacingXxs 0 0;

	.title {
		@include textMixins.maxLines(3);
		font: $titleMd;
		line-height: 1.2em;

		font-size: clamp(0.85rem, 6cqi, 2.5rem);
	}
	.description {
		font: $textMd;
		color: $text-muted;
		display: none;
		font-size: clamp(0.85rem, 4cqi, 1.75rem);
	}

	@container content-container (min-width: 12rem) {
		.title {
			@include textMixins.maxLines(4);
			line-height: 1.1em;
		}
	}

	@container content-container (min-width: 15rem) {
		.title {
			@include textMixins.maxLines(4);
			line-height: 1.1em;
		}
		.description {
			@include textMixins.maxLines(2);
		}
	}

	@container content-container (min-width: 20rem) {
		.title {
			@include textMixins.maxLines(4);
			line-height: 1.1em;
		}
		.description {
			@include textMixins.maxLines(3);
		}
	}

	@container content-container (min-width: 24rem) {
		.title {
			line-height: 1em;
			@include textMixins.maxLines(4);
		}
		.description {
			@include textMixins.maxLines(3);
		}
	}

	@container content-container (min-width: 28rem) {
		.title {
			line-height: 1em;
			@include textMixins.maxLines(4);
		}
		.description {
			@include textMixins.maxLines(4);
		}
	}
}

// If we assume we only show two pieces of meta data
// We can use flex box to space them out
@mixin meta() {
	display: flex;
	justify-content: space-between;

	// For some reason a tiny gap is needed to prevent the last element from overflowing
	margin: 0 $spacingXxs;
	padding: 0;
	font-size: smaller;
	font-style: italic;

	> * {
		// @include textMixins.maxLines(1);
		max-width: 50%;
	}

	.publishers {
		@include textMixins.maxLines(1);
	}

	@container content-container (min-width: 20rem) {
		font-size: small;
	}
}
